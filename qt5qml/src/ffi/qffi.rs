/* automatically generated by rust-bindgen 0.57.0 */

#[repr(C)]
pub struct _QString {
    pub __priv: *mut ::std::os::raw::c_void,
}
#[repr(C)]
pub struct _QByteArray {
    pub __priv: *mut ::std::os::raw::c_void,
}
pub type QString = _QString;
pub type QByteArray = _QByteArray;
extern "C" {
    pub fn qffi_QString_init(self_: *mut QString);
}
extern "C" {
    pub fn qffi_QString_destroy(self_: *mut QString);
}
extern "C" {
    pub fn qffi_QString_clone(self_: *const QString, new_: *mut QString);
}
extern "C" {
    pub fn qffi_QString_equals(self_: *const QString, other: *const QString) -> bool;
}
extern "C" {
    pub fn qffi_QString_size(self_: *const QString) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn qffi_QString_isNull(self_: *const QString) -> bool;
}
extern "C" {
    pub fn qffi_QString_fromUtf8(
        data: *const ::std::os::raw::c_char,
        size: ::std::os::raw::c_int,
        dest: *mut QString,
    );
}
extern "C" {
    pub fn qffi_QString_fromUtf16(
        data: *const ::std::os::raw::c_ushort,
        size: ::std::os::raw::c_int,
        dest: *mut QString,
    );
}
extern "C" {
    pub fn qffi_QString_fromUtf16Unchecked(
        data: *const ::std::os::raw::c_ushort,
        size: ::std::os::raw::c_int,
        dest: *mut QString,
    );
}
extern "C" {
    pub fn qffi_QString_toUtf8(self_: *const QString, dest: *mut QByteArray);
}
extern "C" {
    pub fn qffi_QString_utf16(
        self_: *const QString,
        len: *mut ::std::os::raw::c_int,
    ) -> *const ::std::os::raw::c_ushort;
}
extern "C" {
    pub fn qffi_QString_compare(
        self_: *const QString,
        other: *const QString,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn qffi_QByteArray_init(self_: *mut QByteArray);
}
extern "C" {
    pub fn qffi_QByteArray_destroy(self_: *mut QByteArray);
}
extern "C" {
    pub fn qffi_QByteArray_clone(self_: *const QByteArray, new_: *mut QByteArray);
}
extern "C" {
    pub fn qffi_QByteArray_equals(self_: *const QByteArray, other: *const QByteArray) -> bool;
}
extern "C" {
    pub fn qffi_QByteArray_fromData(
        data: *const ::std::os::raw::c_char,
        len: ::std::os::raw::c_int,
        dest: *mut QByteArray,
    );
}
extern "C" {
    pub fn qffi_QByteArray_data(
        self_: *const QByteArray,
        len: *mut ::std::os::raw::c_int,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn qffi_QByteArray_compare(
        self_: *const QByteArray,
        other: *const QByteArray,
    ) -> ::std::os::raw::c_int;
}
